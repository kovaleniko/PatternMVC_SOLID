#pragma once
#include "include.h"
/*
S	SRP
Принцип единственной ответственности (The Single Responsibility Principle)
Каждый класс должен иметь одну и только одну причину для изменений.
(нет Большим классам)
O	OCP
Принцип открытости/закрытости (The Open Closed Principle)
«программные сущности … должны быть открыты для расширения, но закрыты для модификации».
///необходимо использование наследования/интерфейсов
L	LSP
Принцип подстановки Барбары Лисков (The Liskov Substitution Principle)
«объекты в программе должны быть заменяемыми на экземпляры их подтипов без изменения правильности выполнения программы». См. также контрактное программирование.
Наследующий класс должен дополнять, а не изменять базовый.

I	ISP
Принцип разделения интерфейса (The Interface Segregation Principle)
«много интерфейсов, специально предназначенных для клиентов, лучше, 
чем один интерфейс общего назначения»[9].

D	DIP
Принцип инверсии зависимостей (The Dependency Inversion Principle)
«Зависимость на Абстракциях. Нет зависимости на что-то конкретное».
*/